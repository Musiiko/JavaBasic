package hillel.homework.hw11;
/* 1. Создать класс Box с полями ширина, высота, длина. Определить метод класса, который
вычисляет объем этой коробки (ширина * высоту * длину). Создать 5 конкретных объектов
этого класса и задать с помощью конструктора или методов конкретное состояние этих объектов
(конкретные величины ширины, высоты и длины). Вывести на экран объемы этих коробок.
   2. Добавить в класс Box из предыдущей домашки несколько новых свойств (цвет и материал).
Реализовать новый конструктор (дополнительно к существующему), который будет устанавливать все поля,
также добавить геттеры и сеттеры на каждое поле. В сеттеры добавить логику на установку значений
высоты, ширины и длинны - чтобы нельзя было установить значение меньше, либо равное нулю.
   3. Для класса Box из предыдущих домашек добавить дочерний класс ColorBox и вынести в него свойство color,
а из класса Box это свойство убрать. Все методы для работы с этим свойством тоже перенести из класса Box
в класс ColorBox. Свойства color в классе ColorBox и material в Box переделать на Enum'ы (создать
перечисления для цветов и материалов и задать хотя бы по несколько возможных значений).
   4. Для классов Box и ColorBox из предыдущей домашки переопределить метод toString класса Object, в
котором в реализации класса Box возвращать информацию о длине, ширине и высоте, а также материала коробки,
а для класса ColorBox - всю ту же информации плюс информацию о цвете коробки.
Добавить в конструктор класса Box генерацию исключения если хоть одна из сторон была задана неверно
(меньше либо равна нулю) и обрабатывать это исключение в месте создания экземпляра коробки (как Box так и ColorBox)
Также создать класс Склад (Warehouse, например), который будет в себе содержать массив коробок
(именно базовый тип коробок - Box) и количество коробок, которые уже добавлены в этот массив.
Массив создавать в конструкторе этого класса (размер массива принимать как параметр конструктора).
Реализовать метод в этом классе для добавления коробки в массив (тип брать опять же базовый - Box),
предусмотреть валидацию - проверять, можно ли ещё добавить в массив коробку, количество добавленных коробок
не должно превышать длину массива. Также переопределить метод toString для этого класса - который будет возвращать
информацию о всех коробках, которые хранит в себе склад.
В методе main создать экземпляр класса Склад (задать его вместимость с помощью конструктора).
Заполнить склад коробками (разными - как экземплярами Box, так и ColorBox) и вывести информацию о
складе (вызвать метод склада toString).
 */

public class Main {
    public static void main(String[] args) {
        Warehouse warehouse = new Warehouse(4);
        Box[] boxes = new Box[warehouse.capacity];
        Box box1 = new Box(10,26,158,Material.GLASS);
        Box box2 = new ColorBox(125,77,3,Material.METAL,Color.RED);
        Box box3 = new ColorBox(15,7,433,Material.METAL,Color.BLACK);
        Box box4 = new Box(155,216,15,Material.WOOD);

        warehouse.addBox(box1, 0);
        warehouse.addBox(box2, 1);
        warehouse.addBox(box3, 2);
        warehouse.addBox(box4, 15);

        System.out.println("Warehouse " + warehouse);

    }
}
